{"ast":null,"code":"import { takeLatest, put, all, call } from \"@redux-saga/core/effects\";\nimport userActionTypes from \"./user.types\";\nimport { signInSuccess, signInFailure } from \"./user.actions\";\nimport { auth, googleProvider, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const UserSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: UserSnapshot.id,\n      ...UserSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const UserSnapshot = yield userRef.get();\n    yield put(emailSignInSuccess({\n      id: UserSnapshot.id,\n      ...UserSnapshot.data()\n    }));\n  } catch (error) {\n    put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["C:/code/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","userActionTypes","signInSuccess","signInFailure","auth","googleProvider","createUserProfileDocument","signInWithGoogle","user","signInWithPopup","userRef","UserSnapshot","get","googleSignInSuccess","id","data","error","signInWithEmail","payload","email","password","signInWithEmailAndPassword","emailSignInSuccess","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,0BAA3C;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SACEC,aADF,EAEEC,aAFF,QAGO,gBAHP;AAKA,SACEC,IADF,EAEEC,cAFF,EAGEC,yBAHF,QAIO,+BAJP;AAMA,OAAO,UAAUC,gBAAV,GAA6B;AAClC,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMJ,IAAI,CAACK,eAAL,CAAqBJ,cAArB,CAAvB;AACA,UAAMK,OAAO,GAAG,MAAMV,IAAI,CAACM,yBAAD,EAA4BE,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMd,GAAG,CACPe,mBAAmB,CAAC;AAClBC,MAAAA,EAAE,EAAEH,YAAY,CAACG,EADC;AAElB,SAAGH,YAAY,CAACI,IAAb;AAFe,KAAD,CADZ,CAAT;AAMD,GAVD,CAUE,OAAOC,KAAP,EAAc;AACd,UAAMlB,GAAG,CAACK,aAAa,CAACa,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUC,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA4D;AACjE,MAAI;AACF,UAAM;AAAEZ,MAAAA;AAAF,QAAW,MAAMJ,IAAI,CAACiB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAMV,OAAO,GAAG,MAAMV,IAAI,CAACM,yBAAD,EAA4BE,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMd,GAAG,CACPwB,kBAAkB,CAAC;AACjBR,MAAAA,EAAE,EAAEH,YAAY,CAACG,EADA;AAEjB,SAAGH,YAAY,CAACI,IAAb;AAFc,KAAD,CADX,CAAT;AAMD,GAVD,CAUE,OAAOC,KAAP,EAAc;AACdlB,IAAAA,GAAG,CAACK,aAAa,CAACa,KAAD,CAAd,CAAH;AACD;AACF;AAED,OAAO,UAAUO,mBAAV,GAAgC;AACrC,QAAM1B,UAAU,CAACI,eAAe,CAACuB,oBAAjB,EAAuCjB,gBAAvC,CAAhB;AACD;AAED,OAAO,UAAUkB,kBAAV,GAA+B;AACpC,QAAM5B,UAAU,CAACI,eAAe,CAACyB,mBAAjB,EAAsCT,eAAtC,CAAhB;AACD;AAED,OAAO,UAAUU,SAAV,GAAsB;AAC3B,QAAM5B,GAAG,CAAC,CACRC,IAAI,CAACuB,mBAAD,CADI,EAERvB,IAAI,CAACyB,kBAAD,CAFI,CAAD,CAAT;AAID","sourcesContent":["import { takeLatest, put, all, call } from \"@redux-saga/core/effects\";\r\n\r\nimport userActionTypes from \"./user.types\";\r\n\r\nimport {\r\n  signInSuccess,\r\n  signInFailure\r\n} from \"./user.actions\";\r\n\r\nimport {\r\n  auth,\r\n  googleProvider,\r\n  createUserProfileDocument,\r\n} from \"../../firebase/firebase.utils\";\r\n\r\nexport function* signInWithGoogle() {\r\n  try {\r\n    const { user } = yield auth.signInWithPopup(googleProvider);\r\n    const userRef = yield call(createUserProfileDocument, user);\r\n    const UserSnapshot = yield userRef.get();\r\n    yield put(\r\n      googleSignInSuccess({\r\n        id: UserSnapshot.id,\r\n        ...UserSnapshot.data(),\r\n      })\r\n    );\r\n  } catch (error) {\r\n    yield put(signInFailure(error));\r\n  }\r\n}\r\n\r\nexport function* signInWithEmail({ payload: { email, password } }) {\r\n  try {\r\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n    const userRef = yield call(createUserProfileDocument, user);\r\n    const UserSnapshot = yield userRef.get();\r\n    yield put(\r\n      emailSignInSuccess({\r\n        id: UserSnapshot.id,\r\n        ...UserSnapshot.data(),\r\n      })\r\n    );\r\n  } catch (error) {\r\n    put(signInFailure(error));\r\n  }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n  yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\r\n}\r\n\r\nexport function* userSagas() {\r\n  yield all([\r\n    call(onGoogleSignInStart),\r\n    call(onEmailSignInStart)\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}