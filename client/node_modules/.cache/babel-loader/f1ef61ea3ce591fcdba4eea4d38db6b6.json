{"ast":null,"code":"import ShopActionTypes from \"./shop.types\";\nimport { firestore, convertColletionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nexport const fetchCollectionsStart = collectionsMap => ({\n  type: ShopActionTypes.UPDATE_COLLECTIONS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection(\"collections\");\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(async snapshot => {\n      const collectionsMap = convertColletionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["C:/code/crwn-clothing/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertColletionsSnapshotToMap","fetchCollectionsStart","collectionsMap","type","UPDATE_COLLECTIONS","payload","fetchCollectionsSuccess","FETCH_COLLECTIONS_SUCCESS","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,SACEC,SADF,EAEEC,8BAFF,QAGO,+BAHP;AAKA,OAAO,MAAMC,qBAAqB,GAAIC,cAAD,KAAqB;AACxDC,EAAAA,IAAI,EAAEL,eAAe,CAACM,kBADkC;AAExDC,EAAAA,OAAO,EAAEH;AAF+C,CAArB,CAA9B;AAKP,OAAO,MAAMI,uBAAuB,GAAGJ,cAAc,KAAK;AACtDC,EAAAA,IAAI,EAAEL,eAAe,CAACS,yBADgC;AAEtDF,EAAAA,OAAO,EAAEH;AAF6C,CAAL,CAA9C;AAKP,OAAO,MAAMM,uBAAuB,GAAGC,YAAY,KAAK;AACpDN,EAAAA,IAAI,EAAEL,eAAe,CAACY,yBAD8B;AAEpDL,EAAAA,OAAO,EAAEI;AAF2C,CAAL,CAA5C;AAKP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC9C,SAAQC,QAAD,IAAc;AACnB,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AAEAY,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyB,MAAOC,QAAP,IAAoB;AAC3C,YAAMf,cAAc,GAAGF,8BAA8B,CAACiB,QAAD,CAArD;AACAL,MAAAA,QAAQ,CAACN,uBAAuB,CAACJ,cAAD,CAAxB,CAAR;AACD,KAHD,EAICgB,KAJD,CAIOC,KAAK,IAAIP,QAAQ,CAACJ,uBAAuB,CAACW,KAAK,CAACC,OAAP,CAAxB,CAJxB;AAKD,GATD;AAUD,CAXM","sourcesContent":["import ShopActionTypes from \"./shop.types\";\r\n\r\nimport {\r\n  firestore,\r\n  convertColletionsSnapshotToMap,\r\n} from \"../../firebase/firebase.utils\";\r\n\r\nexport const fetchCollectionsStart = (collectionsMap) => ({\r\n  type: ShopActionTypes.UPDATE_COLLECTIONS,\r\n  payload: collectionsMap,\r\n});\r\n\r\nexport const fetchCollectionsSuccess = collectionsMap => ({\r\n    type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\r\n    payload: collectionsMap\r\n})\r\n\r\nexport const fetchCollectionsFailure = errorMessage => ({\r\n    type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\r\n    payload: errorMessage\r\n})\r\n\r\nexport const fetchCollectionsStartAsync = () => {\r\n  return (dispatch) => {\r\n    const collectionRef = firestore.collection(\"collections\");\r\n    dispatch(fetchCollectionsStart());\r\n\r\n    collectionRef.get().then(async (snapshot) => {\r\n      const collectionsMap = convertColletionsSnapshotToMap(snapshot);\r\n      dispatch(fetchCollectionsSuccess(collectionsMap))\r\n    })\r\n    .catch(error => dispatch(fetchCollectionsFailure(error.message)));\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}